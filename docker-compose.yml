version: '3.8'
x-enviroment-defaults: &enviroment-defaults
  DEBUG: "False"
  DB_NAME: "taxi_app"
  DB_USER: "root"
  DB_PASSWORD: "root"
  DB_HOST: "postgres"
  DB_PORT: 5432
  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_BROKER_BACKEND: "redis://redis:6379/0"
  SECRET_KEY: "secret"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: taxi_app
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    networks:
      - my_network

  web:
    build: 
      context: .
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - celery

    environment:
      <<: *enviroment-defaults
    volumes:
      - static_volume:/app/static
    networks:
      - my_network

  nginx:
    image: nginx:latest
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
      - static_volume:/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - my_network
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email polatbekbeknazarov2003@gmail.com -d 1s-taxi.uz --agree-tos
    networks:
      - my_network

  daphne:
    build:
      context: .
    command: daphne -p 8001 --bind 0.0.0.0 core.asgi:application
    depends_on:
      - postgres
      - redis
    environment:
      <<: *enviroment-defaults
    networks:
      - my_network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - my_network

  celery:
    build:
      context: .
    command: celery -A core worker --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      <<: *enviroment-defaults
    networks:
      - my_network

volumes:
  static_volume:

networks:
  my_network:
    driver: bridge